Pre-conditions:
---------------
- Build environment is green
- No FIXME or NotImplementedException left in source code
- All versions are up-to-date:
  - MigSharp\AssemblyInfo.cs
  - Migrate\AssemblyInfo.cs
  - nuget\MigSharp.nuspec
  - TeamCity variables used to name the binaries
- CHANGES.txt is up-to-date
- All changes pushed to GitHub
- Wiki on GitHub reflects new features and changes

Releasing:
----------
- Tag the sources with AssemblyVersion
  git tag -a v1.0.0 -m "v1.0.0"
  git push origin v1.0.0
- Grab the artifacts from the 3.5 and 4.0 compilation configs (MigSharp.zip) and upload these to GitHub
  - Pin the build on TeamCity
- Verify downloads are okay (extracting the zip file works)
- Publish NuGet package using the MigSharp.nuspec (see: http://docs.nuget.org/)
  - Open nuget/MigSharp.nuspec in the NuGet Package Explorer
  - Adjust package metadata as required
  - Remove the .svn folder from the package content
  - Add content using the following structure:
    lib/
	  net35/
	    MigSharp.dll
		MigSharp.xml
      net40/
	    MigSharp.dll
		MigSharp.xml
  - File > Publish...

Post-actions:
-------------
- Increment AssemblyVersion (see above)
- Announce
- Close all issues related to the released milestone

To branch a release for patches:
--------------------------------
- Use the tag to branch off a release branch for patches:
  git checkout -b RB-1.0 v1.0.0
- Publish the branch:
  git push origin RB-1.0
- Switch back to master:
  git checkout master
- Delete the local RB-1.0 branch:
  git branch -d RB-1.0
- Fetch the remote:
  git fetch
- Start tracking the new remote branch:
  git checkout --track origin/RB-1.0
- Merge bug-fixes from the master:
  git cherry-pick -n 07f42ff9379d99869048ee61264fbdf732ff6b8a
